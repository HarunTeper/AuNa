---
#------------------------------------------------------------------------------
# EXTENSION DEFINITIONS
#------------------------------------------------------------------------------
x-common-base: &common-base
  privileged: true
  network_mode: host
  env_file:
    - ../.env
  stdin_open: true
  tty: true
  pull_policy: build

x-build-package-base: &build-package-base
  context: ../.
  dockerfile: dockerfiles/package.dockerfile
  args:
    PIP_BREAK_SYSTEM_PACKAGES: ${PIP_BREAK_SYSTEM_PACKAGES}

x-package-base: &package-base
  <<: *common-base
  build:
    <<: *build-package-base
  volumes:
    - ./../packages/src:/home/ubuntu/workspace/packages/src:cached

x-gui-base: &gui-base
  <<: *common-base
  build:
    <<: *build-package-base
  volumes:
    - ./../packages/src:/home/ubuntu/workspace/packages/src:cached
    - /tmp/.X11-unix:/tmp/.X11-unix:rw
    - ${XDG_RUNTIME_DIR}:/tmp/runtime-ubuntu:rw
  environment:
    - DISPLAY=${DISPLAY}
    - XDG_RUNTIME_DIR=/tmp/runtime-ubuntu
    - QT_X11_NO_MITSHM=1

x-dev-base: &dev-base
  <<: *common-base
  build:
    context: ../.
    dockerfile: dockerfiles/development.dockerfile
    args:
      - PIP_BREAK_SYSTEM_PACKAGES=${PIP_BREAK_SYSTEM_PACKAGES}
  user: "ubuntu"
  volumes:
    - /dev:/dev
    - ./../.:/home/ubuntu/workspace:cached
    - /tmp/.X11-unix:/tmp/.X11-unix:rw
    - ${XDG_RUNTIME_DIR}:/tmp/runtime-ubuntu:rw
  environment:
    - DISPLAY=${DISPLAY}
    - XDG_RUNTIME_DIR=/tmp/runtime-ubuntu
    - QT_X11_NO_MITSHM=1

services:
  #==============================================================================
  # DEVELOPMENT SERVICES
  #==============================================================================

  development:
    <<: *dev-base
    image: development:latest
    pull_policy: build
    container_name: development
    command:
      [
        "/bin/bash",
        "-c",
        "cd packages && colcon build --symlink-install --cmake-args -DCMAKE_EXPORT_COMPILE_COMMANDS=ON && cd .. && /bin/bash",
      ]
    profiles: ["development"]

  #==============================================================================
  # CONTROL & TELEOPERATION SERVICES
  #==============================================================================

  teleop:
    <<: *gui-base
    build:
      <<: *build-package-base
      args:
        - PIP_BREAK_SYSTEM_PACKAGES=${PIP_BREAK_SYSTEM_PACKAGES}
        - PACKAGE_NAMES=${TELEOP_PACKAGES}
    image: teleop:latest
    pull_policy: build
    container_name: teleop
    command:
      [
        "/bin/bash",
        "-c",
        "source /home/ubuntu/workspace/packages/install/setup.bash && cd packages && source install/setup.bash && ros2 run auna_teleoperation keyboard_teleop_hold --ros-args --params-file src/auna_teleoperation/config/key_teleop.yaml",
      ]
    profiles: ["teleop", "manual_control"]

  #==============================================================================
  # CURVE FITTING SERVICES
  #==============================================================================

  curve_fitting:
    <<: *gui-base
    build:
      <<: *build-package-base
      args:
        - PIP_BREAK_SYSTEM_PACKAGES=${PIP_BREAK_SYSTEM_PACKAGES}
        - PACKAGE_NAMES=${WAYPOINT_PUBLISHER_PACKAGES}
    image: curve_fitting:latest
    pull_policy: build
    container_name: curve_fitting
    command: ["ros2", "launch", "auna_waypoints", "curve_fitting.launch.py"]
    profiles: ["curve_fitting"]

  #==============================================================================
  # TRACING SERVICES
  #==============================================================================

  tracing:
    <<: *package-base
    build:
      <<: *build-package-base
      args:
        - PIP_BREAK_SYSTEM_PACKAGES=${PIP_BREAK_SYSTEM_PACKAGES}
    image: tracing:latest
    volumes:
      - ./traces:/home/ubuntu/workspace/traces
    pull_policy: build
    container_name: tracing
    command:
      [
        "/bin/bash",
        "-c",
        "sudo chown -R ubuntu:ubuntu /home/ubuntu/workspace/traces && source /opt/ros/humble/setup.bash && source /home/ubuntu/tracing/install/setup.bash && ros2 trace",
      ]
    profiles: ["tracing"]

  #==============================================================================
  # DEMO SERVICES
  #==============================================================================

  talker:
    <<: *package-base
    build:
      <<: *build-package-base
      args:
        - PIP_BREAK_SYSTEM_PACKAGES=${PIP_BREAK_SYSTEM_PACKAGES}
        - INSTALL_PACKAGE_NAMES=${DEMO_PACKAGES}
    image: talker:latest
    pull_policy: build
    container_name: talker
    command: ["ros2", "run", "demo_nodes_cpp", "talker"]
    profiles: ["talker"]

  listener:
    <<: *package-base
    build:
      <<: *build-package-base
      args:
        - PIP_BREAK_SYSTEM_PACKAGES=${PIP_BREAK_SYSTEM_PACKAGES}
        - INSTALL_PACKAGE_NAMES=${DEMO_PACKAGES}
    image: listener:latest
    pull_policy: build
    container_name: listener
    command: ["ros2", "run", "demo_nodes_cpp", "listener"]
    profiles: ["listener"]

  #==============================================================================
  # TF2 TOOLS
  #==============================================================================

  tf2_trees:
    <<: *package-base
    build:
      <<: *build-package-base
      args:
        - PIP_BREAK_SYSTEM_PACKAGES=${PIP_BREAK_SYSTEM_PACKAGES}
        - INSTALL_PACKAGE_NAMES=${TF2_TOOLS_PACKAGES}
    image: tf2_trees:latest
    pull_policy: build
    container_name: tf2_trees
    volumes:
      - .:/home/ubuntu/workspace:cached
    command:
      [
        "bash",
        "-c",
        "mkdir -p tf2_trees && cd tf2_trees &&ros2 run tf2_tools view_frames && ros2 run tf2_tools view_frames --ros-args -r /tf:=/robot1/tf -r /tf_static:=/robot1/tf_static && ros2 run tf2_tools view_frames --ros-args -r /tf:=/robot2/tf -r /tf_static:=/robot2/tf_static && ros2 run tf2_tools view_frames --ros-args -r /tf:=/robot3/tf -r /tf_static:=/robot3/tf_static",
      ]
    profiles: ["tf2_trees"]

  #==============================================================================
  # RQT SERVICES
  #==============================================================================

  rqt_base:
    <<: *gui-base
    build:
      <<: *build-package-base
      args:
        - PIP_BREAK_SYSTEM_PACKAGES=${PIP_BREAK_SYSTEM_PACKAGES}
        - INSTALL_PACKAGE_NAMES=${RQT_PACKAGES}
    image: rqt:latest
    pull_policy: build
    container_name: rqt
    command: ["rqt"]
    profiles: ["rqt"]

  rqt_reconfigure:
    extends: rqt_base
    container_name: rqt_reconfigure
    profiles: ["rqt_reconfigure"]
    command: ["ros2", "run", "rqt_reconfigure", "rqt_reconfigure"]

  rqt_graph:
    extends: rqt_base
    container_name: rqt_graph
    command: ["ros2", "run", "rqt_graph", "rqt_graph"]
    profiles: ["rqt_graph"]
